
pipeline {
    agent any
        environment {
        registry = "519852036875.dkr.ecr.us-east-2.amazonaws.com/my-node.js-app"
	DOCKER_TAG = getDockerTag()
    }
     stages{
         stage('Build') {
            steps {
                nodejs(nodeJSInstallationName: 'Nodejs'){
                    sh 'npm install'
                }
           }
        }
	     
        stage('Building image in EC2') {
      steps{
        script {
            docker.withRegistry( 'https://registry.hub.docker.com/','Jenkins-Docker-Integration'){
             myImage = docker.build ("nodejsapp: ${DOCKER_TAG}")
            }
        }
      }
    }
    stage('Build Registry') {
      steps{
        script {
          dockerImage = docker.build registry
        }
      }
    }
  
     // Uploading Docker images into AWS ECR
    stage('Pushing to ECR') {
     steps{  
         script {
                sh 'aws ecr get-login-password --region us-east-2 | docker login --username AWS --password-stdin 519852036875.dkr.ecr.us-east-2.amazonaws.com'
                sh 'docker push 519852036875.dkr.ecr.us-east-2.amazonaws.com/my-node.js-app:${DOCKER_TAG}'
         }
        }
      }
	     
	stage('Deploy to K8S'){
		steps{
		 sh 'chmod +x changeTag.sh'
		 sh './changeTag.sh ${DOCKER_TAG}'
		 sshagent(['BastionHost']) {
   		  sh 'scp -o StrictHostKeyChecking=no service.yml  node-app-pod.yml ubuntu@3.21.21.70:/home/ubuntu/'
		 scripts{
		  try{
			sh 'ssh ubuntu@3.21.21.70 kubectl apply -f .'
			}catch(error){
			sh 'ssh ubuntu@3.21.21.70 kubectl create -f .'
				    }
			      }
		           }
			}
		 
		 }
    	 
    }
     
   }
